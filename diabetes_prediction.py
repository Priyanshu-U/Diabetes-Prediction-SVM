# -*- coding: utf-8 -*-
"""Diabetes Prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mFhRo3ieOQwP7c8mIkZ6x_OeiLAktbqJ
"""

#Importing Dependancies
import numpy as np
import pandas as pd
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn import svm
from sklearn.metrics import accuracy_score

"""Data Collection and Analysis"""

diabetes_data=pd.read_csv('/content/diabetes.csv')
diabetes_data.head()

diabetes_data.describe()

"""0-->Non-Diabetic

1-->Diabetic
"""

diabetes_data['Outcome'].value_counts()

diabetes_data.groupby('Outcome').mean()

x=diabetes_data.drop(columns='Outcome',axis=1)
y=diabetes_data['Outcome']

print(x)
print(y)

"""Data Standardisation"""

scaler=StandardScaler()
scaler.fit_transform(x)
x=scaler.transform(x)
print(x)

"""Test Train Split"""

x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,stratify=y,random_state=2)

print(x.shape,x_test.shape,x_train)

"""Training Model"""

classifier=svm.SVC(kernel='linear')

#training the support vector machine classifier
classifier.fit(x_train,y_train)

"""Testing Accuracy"""

x_train_prediction=classifier.predict(x_train)
training_accuracy=accuracy_score(x_train_prediction,y_train)
print(training_accuracy)

x_test_prediction=classifier.predict(x_test)
testing_accuracy=accuracy_score(x_test_prediction,y_test)
print(testing_accuracy)

"""Prediction System"""

#making the prediction system
input_data=(1,85,66,29,0,26.6,0.351,31)
input_data_np=np.asarray(input_data)
#reshaping the data
input_data_reshaped=input_data_np.reshape(-1,8)

#standardising the data
std_data=scaler.transform(input_data_reshaped)
print(std_data)

prediction=classifier.predict(std_data)
size=len(prediction)
for i in range(size):
  if prediction[i]=='1':
    print("Diabetic")
  else:
    print("Not-Diabetic")

